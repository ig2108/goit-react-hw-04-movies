{"version":3,"sources":["pages/HomePage/HomePage.jsx","heplers/getIdFromProps.jsx","components/ButtonReturn/ButtonReturn.jsx","components/AboutFilm/AboutFilm.jsx","components/AdditionalBlock/AdditionalBlock.jsx","components/CastList/CastList.jsx","components/Cast/Cast.jsx","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.jsx","services/filmsApi.jsx","heplers/filmsMapper.jsx","components/FilmsList/FilmsList.jsx","components/FilmsList/FilmsList.module.css","components/Searchbar/Searchbar.module.css","components/ButtonReturn/ButtonReturn.module.css","components/AboutFilm/AboutFilm.module.css","components/AdditionalBlock/AdditionalBlock.module.css","components/CastList/CastList.module.css","components/ReviewsList/ReviewsList.module.css","pages/MovieDetailsPage/MovieDetailsPage.module.css"],"names":["HomePage","state","filmsInTrends","filmsApi","then","data","setState","filmsMapper","results","catch","err","console","log","this","className","styles","homePage","films","Component","getIdFromProps","props","match","params","movieId","ButtonReturn","onGoBack","ButtonLoadMore","type","onClick","AboutFilm","film","poster_path","title","vote_average","overview","genres","filmImg","src","alt","filmInfo","filmName","chapterInfo","chapterTitle","genresList","map","genre","key","id","genresItem","name","withRouter","ToggleInfo","additionalBlockTitle","additionalBlockList","additionalBlockItem","additionalItemLink","to","pathname","CastList","cast","onToggleList","length","castList","character","profile_path","castItem","castItemImg","castItemName","castItemCharacter","Cast","getFilmCastInfo","ReviewsList","reviews","reviewsList","author","content","reviewItem","reviewItemAuthor","reviewItemContent","Reviews","getFilmReviewsInfo","prevProps","prevState","queryString","require","getQueryFromSearchInput","location","parse","from","search","query","MovieDetailsPage","searchInput","handleGoBack","history","push","hadleToggledInfo","e","currentTarget","textContent","split","includes","handleToggleList","btnWrap","filmSection","additionalBlock","path","render","Searchbar","queryInput","handleChangeInputSearch","value","target","handleSubmit","preventDefault","onSubmit","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onChange","autoComplete","autoFocus","placeholder","MoviesPage","searchedFilms","getSearchFilms","alert","parsedQueryString","getQSFromLocation","FilmsList","KEY","BASE_URL","getFilmsInTrends","axios","get","getFilmWithId","getFilmsByQuery","getFilmCastById","getFilmReviewsById","filmsList","filmsListItem","filmsListItemTitle","module","exports"],"mappings":"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","file":"static/js/home-page.5c6121bc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types'\r\nimport * as filmsApi from '../../services/filmsApi';\r\nimport filmsMapper from '../../heplers/filmsMapper';\r\nimport FilmsList from '../../components/FilmsList/FilmsList';\r\nimport styles from './HomePage.module.css';\r\n\r\nexport default class HomePage extends Component {\r\n  state = {\r\n    filmsInTrends: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    filmsApi\r\n      .getFilmsInTrends()\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          filmsInTrends: filmsMapper(data.results),\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const { filmsInTrends } = this.state;\r\n    return (\r\n      <div className={styles.homePage}>\r\n        <h2>Trending Films</h2>\r\n        <FilmsList films={filmsInTrends} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const getIdFromProps = props => props.match.params.movieId;\r\n\r\nexport default getIdFromProps;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ButtonReturn.module.css';\r\n\r\nconst ButtonReturn = ({ onGoBack }) => {\r\n  return (\r\n    <button className={styles.ButtonLoadMore} type=\"button\" onClick={onGoBack}>\r\n      Go back\r\n    </button>\r\n  );\r\n};\r\n\r\nButtonReturn.propTypes = {\r\n  onGoBack: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ButtonReturn;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './AboutFilm.module.css';\r\n\r\nconst AboutFilm = ({ film }) => {\r\n  const { poster_path, title, vote_average, overview, genres } = film;\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        className={styles.filmImg}\r\n        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n        alt=\"\"\r\n      />\r\n      <div className={styles.filmInfo}>\r\n        <h2 className={styles.filmName}> {title}</h2>\r\n        <p className={styles.chapterInfo}>Users Score: {vote_average * 10} %</p>\r\n        <h3 className={styles.chapterTitle}>Overview</h3>\r\n        <p className={styles.chapterInfo}>{overview}</p>\r\n        <h3 className={styles.chapterTitle}>Genres</h3>\r\n        <div className={styles.genresList}>\r\n          {genres.map(genre => (\r\n            <span key={genre.id} className={styles.genresItem}>\r\n              {`${genre.name} `}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nAboutFilm.propTypes = {\r\n  film: PropTypes.shape({\r\n    poster_path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    vote_average: PropTypes.number.isRequired,\r\n    overview: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    ),\r\n  }),\r\n};\r\n\r\nexport default AboutFilm;\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './AdditionalBlock.module.css';\r\n\r\nconst AdditionalBlock = ({ id, ToggleInfo }) => {\r\n  return (\r\n    <>\r\n      <h4 className={styles.additionalBlockTitle}>Additional Information</h4>\r\n      <ul className={styles.additionalBlockList}>\r\n        <li className={styles.additionalBlockItem} onClick={ToggleInfo}>\r\n          <Link\r\n            className={styles.additionalItemLink}\r\n            to={{ pathname: `/movies/${id}/cast` }}\r\n          >\r\n            Cast\r\n          </Link>\r\n        </li>\r\n        <li className={styles.additionalBlockItem} onClick={ToggleInfo}>\r\n          <Link\r\n            className={styles.additionalItemLink}\r\n            to={{ pathname: `/movies/${id}/cast` }}\r\n          >\r\n            Reviews\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nAdditionalBlock.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  ToggleInfo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(AdditionalBlock);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './CastList.module.css';\r\n\r\nconst CastList = ({ cast = [], onToggleList }) => {\r\n  return cast.length > 0 ? (\r\n    <ul className={styles.castList} onClick={onToggleList}>\r\n      {cast.map(({ character, name, profile_path, id }) => (\r\n        <li key={id} className={styles.castItem}>\r\n          {profile_path && (\r\n            <img\r\n              className={styles.castItemImg}\r\n              src={`https://image.tmdb.org/t/p/w400/${profile_path}`}\r\n              alt={'member of cast'}\r\n            />\r\n          )}\r\n          <p className={styles.castItemName}>{name}</p>\r\n          <p className={styles.castItemCharacter}>Character: {character}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  ) : (\r\n    <p>We don't have any cast info for this movie.</p>\r\n  );\r\n};\r\n\r\nCastList.propTypes = {\r\n  onToggleList: PropTypes.func.isRequired,\r\n  cast: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      character: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      profile_path: PropTypes.string.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default CastList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as filmsApi from '../../services/filmsApi';\r\nimport CastList from '../CastList/CastList';\r\n\r\nexport default class Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props;\r\n    this.getFilmCastInfo(id);\r\n  }\r\n\r\n  getFilmCastInfo = id => {\r\n    filmsApi\r\n      .getFilmCastById(id)\r\n      .then(({ data }) =>\r\n        this.setState({\r\n          cast: [...data.cast],\r\n        }),\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n    const { onToggleList } = this.props;\r\n    return <CastList cast={cast} onToggleList={onToggleList} />;\r\n  }\r\n}\r\n\r\nCast.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  onToggleList: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ReviewsList.module.css';\r\n\r\nconst ReviewsList = ({ reviews = [], onToggleList }) => {\r\n  return reviews.length > 0 ? (\r\n    <ul className={styles.reviewsList} onClick={onToggleList}>\r\n      {reviews.map(({ id, author, content }) => (\r\n        <li key={id} className={styles.reviewItem}>\r\n          <h3 className={styles.reviewItemAuthor}>Author: {author}</h3>\r\n          <p className={styles.reviewItemContent}>{content}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  ) : (\r\n    <p>We don't have any reviews for this movie.</p>\r\n  );\r\n};\r\n\r\nReviewsList.propTypes = {\r\n  onToggleList: PropTypes.func.isRequired,\r\n  reviews: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ReviewsList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as filmsApi from '../../services/filmsApi';\r\nimport ReviewsList from '../ReviewsList/ReviewsList';\r\n\r\nexport default class Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props;\r\n    this.getFilmReviewsInfo(id);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState !== this.state) {\r\n      console.log(this.state);\r\n    }\r\n  }\r\n\r\n  getFilmReviewsInfo = id => {\r\n    filmsApi\r\n      .getFilmReviewsById(id)\r\n      .then(({ data }) =>\r\n        this.setState({\r\n          reviews: [...data.results],\r\n        }),\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n    const { onToggleList } = this.props;\r\n    return <ReviewsList reviews={reviews} onToggleList={onToggleList} />;\r\n  }\r\n}\r\n\r\nReviews.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  onToggleList: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n// import PropTypes from 'prop-types';\r\nimport * as filmsApi from '../../services/filmsApi';\r\nimport getIdFromProps from '../../heplers/getIdFromProps';\r\nimport ButtonReturn from '../../components/ButtonReturn/ButtonReturn';\r\nimport AboutFilm from '../../components/AboutFilm/AboutFilm';\r\nimport AdditionalBlock from '../../components/AdditionalBlock/AdditionalBlock';\r\nimport Cast from '../../components/Cast/Cast';\r\nimport Reviews from '../../components/Reviews/Reviews';\r\nimport styles from './MovieDetailsPage.module.css';\r\n\r\nconst queryString = require('query-string');\r\nconst getQueryFromSearchInput = location => {\r\n  return queryString.parse(location.state.from.search).query;\r\n};\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  state = {\r\n    film: null,\r\n    searchInput: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const id = getIdFromProps(this.props);\r\n    const { location } = this.props;\r\n\r\n    filmsApi\r\n      .getFilmWithId(id)\r\n      .then(({ data }) =>\r\n        this.setState({\r\n          film: { ...data },\r\n        }),\r\n      )\r\n      .catch(err => console.log(err));\r\n\r\n    if (location.state) {\r\n      this.setState({\r\n        searchInput: getQueryFromSearchInput(location),\r\n      });\r\n    }\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { history } = this.props;\r\n    const { searchInput } = this.state;\r\n    if (searchInput) {\r\n      return history.push(`/movies?query=${searchInput}`);\r\n    } else {\r\n      return history.push('/');\r\n    }\r\n  };\r\n\r\n  hadleToggledInfo = e => {\r\n    const { history, location } = this.props;\r\n    const id = getIdFromProps(this.props);\r\n    console.log(e.currentTarget.textContent);\r\n\r\n    if (\r\n      location.pathname.split('/').includes('cast') ||\r\n      location.pathname.split('/').includes('reviews')\r\n    ) {\r\n      if (\r\n        location.pathname.split('/').includes('cast') &&\r\n        e.currentTarget.textContent === 'Reviews'\r\n      ) {\r\n        return history.push(`/movies/${id}/reviews`);\r\n      } else if (\r\n        location.pathname.split('/').includes('reviews') &&\r\n        e.currentTarget.textContent === 'Cast'\r\n      ) {\r\n        return history.push(`/movies/${id}/cast`);\r\n      } else history.push(`/movies/${id}`);\r\n    } else {\r\n      if (e.currentTarget.textContent === 'Reviews') {\r\n        return history.push(`/movies/${id}/reviews`);\r\n      } else if (e.currentTarget.textContent === 'Cast') {\r\n        return history.push(`/movies/${id}/cast`);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleToggleList = () => {\r\n    const { history } = this.props;\r\n    const id = getIdFromProps(this.props);\r\n    history.push(`/movies/${id}`);\r\n  };\r\n\r\n  render() {\r\n    const { film } = this.state;\r\n    const { match } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div className={styles.btnWrap}>\r\n          <ButtonReturn onGoBack={this.handleGoBack} />\r\n        </div>\r\n        {film && (\r\n          <>\r\n            <div className={styles.filmSection}>\r\n              <AboutFilm film={film} />\r\n            </div>\r\n            <div className={styles.additionalBlock}>\r\n              <AdditionalBlock\r\n                id={film.id}\r\n                ToggleInfo={this.hadleToggledInfo}\r\n              />\r\n            </div>\r\n\r\n            <Route\r\n              path={`${match.path}/cast`}\r\n              render={props => (\r\n                <Cast id={film.id} onToggleList={this.handleToggleList} />\r\n              )}\r\n            />\r\n            <Route\r\n              path={`${match.path}/reviews`}\r\n              render={props => (\r\n                <Reviews id={film.id} onToggleList={this.handleToggleList} />\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Searchbar.module.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    queryInput: '',\r\n  };\r\n\r\n  handleChangeInputSearch = e => {\r\n    const { value } = e.target;\r\n    this.setState({\r\n      queryInput: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { queryInput } = this.state;\r\n    const { onSubmit } = this.props;\r\n    if (queryInput) {\r\n      onSubmit(queryInput);\r\n      this.setState({\r\n        queryInput: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { queryInput } = this.state;\r\n    return (\r\n      <div className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            value={queryInput}\r\n            onChange={this.handleChangeInputSearch}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search films\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport * as filmsApi from '../../services/filmsApi';\r\nimport filmsMapper from '../../heplers/filmsMapper';\r\nimport FilmsList from '../../components/FilmsList/FilmsList';\r\nimport Searchbar from '../../components/Searchbar/Searchbar';\r\n// import styles from './MoviesPage.module.css';\r\nconst queryString = require('query-string');\r\nconst getQSFromLocation = location => {\r\n  return queryString.parse(location.search).query;\r\n};\r\n\r\nexport default class MoviesPage extends Component {\r\n  state = {\r\n    searchedFilms: [],\r\n    searchInput: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location } = this.props;\r\n    const parsedQueryString = getQSFromLocation(location);\r\n    if (parsedQueryString) {\r\n      this.getSearchFilms(parsedQueryString);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { searchInput } = this.state;\r\n    const { history, location } = this.props;\r\n\r\n    if (prevState.searchInput !== searchInput) {\r\n      this.getSearchFilms(searchInput);\r\n      history.push({\r\n        ...location,\r\n        search: `query=${searchInput}`,\r\n      });\r\n    }\r\n  }\r\n\r\n  getSearchFilms = queryString => {\r\n    filmsApi\r\n      .getFilmsByQuery(queryString)\r\n      .then(({ data }) => {\r\n        data.results.length === 0\r\n          ? alert(\"Don't find films with this titles\")\r\n          : this.setState({\r\n              searchedFilms: filmsMapper(data.results),\r\n            });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleSubmit = queryInput => {\r\n    this.setState({\r\n      searchInput: queryInput,\r\n    });\r\n  };\r\n  render() {\r\n    const { searchedFilms } = this.state;\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.handleSubmit} />\r\n        {searchedFilms.length > 0 && <FilmsList films={searchedFilms} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst KEY = '66574a98b78cfb7ae35c861695d0d9c0';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nexport const getFilmsInTrends = () =>\r\n  axios.get(BASE_URL + `trending/all/day?api_key=${KEY}`);\r\n\r\nexport const getFilmWithId = id =>\r\n  axios.get(BASE_URL + `movie/${id}?api_key=${KEY}`);\r\n\r\nexport const getFilmsByQuery = queryString =>\r\n  axios.get(\r\n    BASE_URL +\r\n      `search/movie?api_key=${KEY}&language=en-US&query=${queryString}&page=1&include_adult=false`,\r\n  );\r\n\r\nexport const getFilmCastById = id =>\r\n  axios.get(BASE_URL + `movie/${id}/credits?api_key=${KEY}`);\r\n\r\nexport const getFilmReviewsById = id =>\r\n  axios.get(\r\n    BASE_URL + `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`,\r\n  );\r\n","const filmsMapper = films => {\r\n  return films.map(({ id, name, title }) => ({\r\n    id,\r\n    name,\r\n    title,\r\n  }));\r\n};\r\n\r\nexport default filmsMapper;\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FilmsList.module.css';\r\n\r\nconst FilmsList = ({ films = [], location }) => {\r\n  return (\r\n    <ul className={styles.filmsList}>\r\n      {films.map(({ id, name, title }) => (\r\n        <li key={id} className={styles.filmsListItem}>\r\n          <Link to={{ pathname: `/movies/${id}`, state: { from: location } }}>\r\n            <p className={styles.filmsListItemTitle}>{name || title}</p>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFilmsList.propTypes = {\r\n  films: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string,\r\n      title: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n  location: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(FilmsList);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmsList\":\"FilmsList_filmsList__3NVPu\",\"filmsListItem\":\"FilmsList_filmsListItem__23Dmp\",\"filmsListItemTitle\":\"FilmsList_filmsListItemTitle__3OnBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__WS00H\",\"SearchForm\":\"Searchbar_SearchForm__36bRu\",\"SearchFormButton\":\"Searchbar_SearchFormButton__28emy\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__TWqKg\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3mq8V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonLoadMore\":\"ButtonReturn_ButtonLoadMore__1ZUxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmInfo\":\"AboutFilm_filmInfo__3Cmoh\",\"filmName\":\"AboutFilm_filmName__3WmyY\",\"chapterTitle\":\"AboutFilm_chapterTitle__2XARE\",\"chapterInfo\":\"AboutFilm_chapterInfo__2_DoG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"additionalBlockTitle\":\"AdditionalBlock_additionalBlockTitle__3AgI5\",\"additionalBlockItem\":\"AdditionalBlock_additionalBlockItem__6vHBY\",\"additionalItemLink\":\"AdditionalBlock_additionalItemLink__1FqCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"castList\":\"CastList_castList__OMR10\",\"castItem\":\"CastList_castItem__2qxWc\",\"castItemImg\":\"CastList_castItemImg__EUbUl\",\"castItemName\":\"CastList_castItemName__3mkiu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviewsList\":\"ReviewsList_reviewsList__2Tpf3\",\"reviewItem\":\"ReviewsList_reviewItem__1xCuF\",\"reviewItemAuthor\":\"ReviewsList_reviewItemAuthor__aAMx3\",\"reviewItemContent\":\"ReviewsList_reviewItemContent__3WiFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnWrap\":\"MovieDetailsPage_btnWrap__1bUS-\",\"filmSection\":\"MovieDetailsPage_filmSection__2zd1f\",\"additionalBlock\":\"MovieDetailsPage_additionalBlock__2N3o8\"};"],"sourceRoot":""}